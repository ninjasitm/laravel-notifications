<?php

namespace $NAMESPACE_API_CONTROLLER$;

use $NAMESPACE_API_REQUEST$\Create$MODEL_NAME$APIRequest;
use $NAMESPACE_API_REQUEST$\Update$MODEL_NAME$APIRequest;
use $NAMESPACE_MODEL$\$MODEL_NAME$;
use Illuminate\Http\Request;
use $NAMESPACE_APP$\Http\Controllers\Controller;
use Response;

$DOC_CONTROLLER$
class $MODEL_NAME$Controller extends Controller
{
    $DOC_INDEX$
    public function index(Request $request)
    {
        $query = $MODEL_NAME$::query();

        if ($request->get('skip')) {
            $query->skip($request->get('skip'));
        }
        if ($request->get('limit')) {
            $query->limit($request->get('limit'));
        }

        $models = $query->get();

        return $this->paginate($models, '$MODEL_NAME_PLURAL_HUMAN$ retrieved successfully');
    }

    $DOC_STORE$
    public function store(Create$MODEL_NAME$APIRequest $request)
    {
        $input = $request->all();

        /** @var $MODEL_NAME$ $model */
        $model = $MODEL_NAME$::create($input);

        return $this->printModelSuccess($model, '$MODEL_NAME_HUMAN$ saved successfully');
    }

    $DOC_SHOW$
    public function show($id)
    {
        /** @var $MODEL_NAME$ $model */
        $model = $MODEL_NAME$::find($id);

        if (empty($model)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        return $this->printModelSuccess($model, '$MODEL_NAME_HUMAN$ retrieved successfully');
    }

    $DOC_UPDATE$
    public function update($id, Update$MODEL_NAME$APIRequest $request)
    {
        /** @var $MODEL_NAME$ $model */
        $model = $MODEL_NAME$::find($id);

        if (empty($model)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        $model->fill($request->all());
        $model->save();

        return $this->printModelSuccess($model, '$MODEL_NAME$ updated successfully');
    }

    $DOC_DESTROY$
    public function destroy($id)
    {
        /** @var $MODEL_NAME$ $model */
        $model = $MODEL_NAME$::find($id);

        if (empty($model)) {
            return $this->sendError('$MODEL_NAME_HUMAN$ not found');
        }

        $model->delete();

        return $this->printModelSuccess($id, '$MODEL_NAME_HUMAN$ deleted successfully');
    }
}
